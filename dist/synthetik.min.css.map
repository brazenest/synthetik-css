{"version":3,"sources":["..\\src\\sass\\modules\\_reset.sass","..\\src\\sass\\modules\\_flex.sass","..\\src\\sass\\modules\\_breakpoints.sass","..\\src\\sass\\modules\\_theme.sass","..\\src\\sass\\modules\\_base.sass","..\\src\\sass\\modules\\_text.sass","..\\src\\sass\\modules\\_buttons.sass","..\\src\\sass\\modules\\_links.sass","..\\src\\sass\\modules\\_images.sass","..\\src\\sass\\modules\\_lists.sass"],"names":[],"mappings":"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","sourcesContent":["body {\n    margin: 0; }\ndd {\n    margin-left: 0; }\n","//- Layout settings pertaining to flexboxes\n\n.container {\n    display: flex;\n    flex-direction: $flex-page-main-axis;\n    max-width: var(--container-max-width);\n    margin: auto;\n    padding-left: 1rem;\n    padding-right: 1rem;\n    &.fluid-width {\n        --container-max-width: 100vw; }\n\n    .row {\n        display: flex;\n        flex-direction: $flex-page-cross-axis;\n        &.align-items-center {\n            align-items: center !important; }\n        &>[class*=\"col-\"], &>.col {\n            flex-basis: 1px; //- (100% / 12)\n            overflow-x: hidden;\n            &:not(:first-child) {\n                margin-left: 0.5rem; }\n            &:not(:last-child) {\n                margin-right: 0.5rem; } }\n        .col {\n            flex-grow: 1;\n            flex-shrink: 1; }\n        @for $ratio from 1 through 12 {\n            .col-#{$ratio}, .col.col-#{$ratio} {\n                flex-grow: #{$ratio};\n                flex-shrink: #{$ratio}; } } } }\n\n.width-fluid {\n    max-width: none; }\n\nhtml {\n    @include media-breakpoint-only(sm) {\n        --container-max-width: 540px; }\n    @include media-breakpoint-only(md) {\n        --container-max-width: 720px; }\n    @include media-breakpoint-only(lg) {\n        --container-max-width: 960px; }\n    @include media-breakpoint-only(xl) {\n        --container-max-width: 1140px; }\n    @include media-breakpoint-only(xxl) {\n        --container-max-width: 1440px; }\n    @include media-breakpoint-only(qhd) {\n        --container-max-width: 1980px; } }\n","// Breakpoint viewport sizes and media queries.\n//\n// Breakpoints are defined as a map of (name: minimum width), order from small to large:\n//\n//    (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px)\n//\n// The map defined in the `$grid-breakpoints` global variable is used as the `$breakpoints` argument by default.\n\n// Name of the next breakpoint, or null for the last breakpoint.\n//\n//    >> breakpoint-next(sm)\n//    md\n//    >> breakpoint-next(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    md\n//    >> breakpoint-next(sm, $breakpoint-names: (xs sm md lg xl))\n//    md\n@function breakpoint-next($name, $breakpoints: $grid-breakpoints, $breakpoint-names: map-keys($breakpoints)) {\n  $n: index($breakpoint-names, $name);\n\n  @return if($n < length($breakpoint-names), nth($breakpoint-names, $n + 1), null); }\n\n// Minimum breakpoint width. Null for the smallest (first) breakpoint.\n//\n//    >> breakpoint-min(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    576px\n@function breakpoint-min($name, $breakpoints: $grid-breakpoints) {\n  $min: map-get($breakpoints, $name);\n\n  @return if($min != 0, $min, null); }\n\n// Maximum breakpoint width. Null for the largest (last) breakpoint.\n// The maximum value is calculated as the minimum of the next one less 0.02px\n// to work around the limitations of `min-` and `max-` prefixes and viewports with fractional widths.\n// See https://www.w3.org/TR/mediaqueries-4/#mq-min-max\n// Uses 0.02px rather than 0.01px to work around a current rounding bug in Safari.\n// See https://bugs.webkit.org/show_bug.cgi?id=178261\n//\n//    >> breakpoint-max(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    767.98px\n@function breakpoint-max($name, $breakpoints: $grid-breakpoints) {\n  $next: breakpoint-next($name, $breakpoints);\n\n  @return if($next, breakpoint-min($next, $breakpoints) - 0.02px, null); }\n\n// Returns a blank string if smallest breakpoint, otherwise returns the name with a dash infront.\n// Useful for making responsive utilities.\n//\n//    >> breakpoint-infix(xs, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    \"\"  (Returns a blank string)\n//    >> breakpoint-infix(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    \"-sm\"\n@function breakpoint-infix($name, $breakpoints: $grid-breakpoints) {\n  @return if(breakpoint-min($name, $breakpoints) == null, \"\", \"-#{$name}\"); }\n\n// Media of at least the minimum breakpoint width. No query for the smallest breakpoint.\n// Makes the @content apply to the given breakpoint and wider.\n@mixin media-breakpoint-up($name, $breakpoints: $grid-breakpoints) {\n  $min: breakpoint-min($name, $breakpoints);\n\n  @if $min {\n    @media (min-width: $min) {\n      @content; } }\n  @else {\n    @content; } }\n\n// Media of at most the maximum breakpoint width. No query for the largest breakpoint.\n// Makes the @content apply to the given breakpoint and narrower.\n@mixin media-breakpoint-down($name, $breakpoints: $grid-breakpoints) {\n  $max: breakpoint-max($name, $breakpoints);\n\n  @if $max {\n    @media (max-width: $max) {\n      @content; } }\n  @else {\n    @content; } }\n\n// Media that spans multiple breakpoint widths.\n// Makes the @content apply between the min and max breakpoints\n@mixin media-breakpoint-between($lower, $upper, $breakpoints: $grid-breakpoints) {\n  $min: breakpoint-min($lower, $breakpoints);\n  $max: breakpoint-max($upper, $breakpoints);\n\n  @if $min != null and $max != null {\n    @media (min-width: $min) and (max-width: $max) {\n      @content; } }\n  @else if $max == null {\n    @include media-breakpoint-up($lower, $breakpoints) {\n      @content; } }\n  @else if $min == null {\n    @include media-breakpoint-down($upper, $breakpoints) {\n      @content; } } }\n\n// Media between the breakpoint's minimum and maximum widths.\n// No minimum for the smallest breakpoint, and no maximum for the largest one.\n// Makes the @content apply only to the given breakpoint, not viewports any wider or narrower.\n@mixin media-breakpoint-only($name, $breakpoints: $grid-breakpoints) {\n  $min: breakpoint-min($name, $breakpoints);\n  $max: breakpoint-max($name, $breakpoints);\n\n  @if $min != null and $max != null {\n    @media (min-width: $min) and (max-width: $max) {\n      @content; } }\n  @else if $max == null {\n    @include media-breakpoint-up($name, $breakpoints) {\n      @content; } }\n  @else if $min == null {\n    @include media-breakpoint-down($name, $breakpoints) {\n      @content; } } }\n","@each $name, $color-info in $theme-colors {\n    .color-#{$name} {\n        --theme-main-color: #{nth($color-info, 1)};\n        --theme-text-color: #{nth($color-info, 2)}; } }\n\n.color-block {\n    padding: 1em;\n    color: var(--theme-text-color);\n    background-color: var(--theme-main-color);\n    @at-root span#{&} {\n        display: inline-block; } }\n\n.has-color-bg {\n    background-color: var(--theme-main-color, initial); }\n"," :root {\n    --text-color: #{$text-color};\n    --text-color-inverted: #{invert($text-color)};\n    --body-font-family: var(--base-font-family);\n    --base-font-family: #{$base-font-family};\n    --body-font-size: 1rem;\n    @include media-breakpoint-down(sm) {\n        --base-font-size: #{$base-font-size}; }\n    @include media-breakpoint-up(md) {\n        --base-font-size: #{(17 / 16) * $base-font-size}; }\n    @include media-breakpoint-up(lg) {\n        --base-font-size: #{(18 / 16) * $base-font-size}; }\n    @include media-breakpoint-up(xl) {\n        --base-font-size: #{(19 / 16) * $base-font-size}; }\n    @include media-breakpoint-up(xxl) {\n        --base-font-size: #{(20 / 16) * $base-font-size}; }\n    @include media-breakpoint-up(qhd) {\n        --base-font-size: #{(22 / 16) * $base-font-size}; } }\n\nbody {\n\n    color: var(--text-color);\n    font-family: var(--body-font-family);\n    font-size: var(--body-font-size); }\n\nhtml {\n\n    font-size: var(--base-font-size, 1rem); }\n\n\n// per-element margin and padding adjustment utils\n$element-layout-items: (m: margin, p: padding);\n$element-layout-sides: (t: top, r: right, b: bottom, l: left);\n\n@each $prop-letter, $prop-prefix in $element-layout-items {\n    @each $side-letter, $side in $element-layout-sides {\n        @each $spacer-index, $spacer-value in $spacers {\n            .#{$prop-letter}#{$side-letter}-#{$spacer-index} {\n                #{$prop-prefix}-#{$side}: #{$spacer-value}; } } } }\n","html {\n    --headings-line-height: calc(76 / 73); //- was 79/73 ~ 1.08219178\n    --headings-margin-vertical: #{map-get($spacers, 3)}; }\n\n.italic, em {\n    font-style: italic; }\n.bold, strong {\n    --text-bold-weight: #{$text-strong-weight};\n    font-weight: var(--text-bold-weight); }\n.small, small {\n    font-size: 1em * math-pow($step-value-down, 1); }\n\n@for $level from 1 through 10 {\n    .size-up-#{$level} {\n        font-size: 1em * math-pow($step-value-up, $level); }\n    .size-down-#{$level} {\n        font-size: 1em * math-pow($step-value-down, $level); } }\n\n\n@for $size from 1 through 6 {\n    h#{$size}, .h#{$size}, .heading-size-#{(7 - $size)} {\n        font-size: 1em * math-pow($step-value-up, 6 - $size);\n        line-height: var(--headings-line-height);\n        margin: var(--headings-margin-vertical) 0; }\n    .display-size-#{$size} {\n        font-weight: $display-text-weight;\n        font-size: 1rem * math-pow($step-value-up, 2 + $size); } }\n\ncode {\n    background: var(--text-color-inverted);\n    filter: invert(14%);\n    padding: 0 0.25em; }\n\n.suppend-period {\n    &:after {\n        content: \".\"; } }\n.suppend-colon {\n    &:after {\n        content: \":\"; } }\n\n.center {\n    text-align: center; }\n","button, .button {\n    --button-background: var(--theme-main-color, initial);\n    --button-text-color: var(--theme-text-color, --text-color);\n    --button-border-radius: 0.38em;\n    --button-text-transform: uppercase;\n    --button-border: 1px solid var(--theme-text-color);\n    --button-padding: 0.875em 1.5em;\n    --button-hover-filter: brightness(117%) saturate(88%);\n    background-color: var(--button-background);\n    border: var(--button-border);\n    border-radius: var(--button-border-radius);\n    color: var(--button-text-color);\n    font-size: 0.7em;\n    font-weight: 500;\n    padding: var(--button-padding);\n    text-transform: var(--button-text-transform);\n    cursor: pointer;\n    &:hover {\n        filter: var(--button-hover-filter); } }\n"," :root {\n    --link-color: #{$link-color};\n    --link-underline-color: #{$link-underline-color};\n    --link-underline-style: #{$link-underline-style};\n    --link-underline-thickness: #{$link-underline-thickness}; }\n\na {\n    color: var(--link-color);\n    text-decoration: none;\n    &:hover {\n        border-bottom: var(--link-underline-thickness) var(--link-underline-style) var(--link-underline-color); } }\n","img {\n    &.fluid-width {\n        width: 100%;\n        max-width: 100%;\n        height: auto; } }\n"," :root {\n\n    --definition-list-vertical-spacing: #{map-get($spacers, 5)};\n    --definition-list-term-weight: #{$definition-list-term-weight};\n    --definition-list-term-vertical-spacing: #{map-get($spacers, 1)};\n    --definition-list-item-spacing: #{map-get($spacers, 4)}; }\n\n/*\n    Definition lists ( <dl>, <dt>, <dd> )\n        */\n\ndl, .dl {\n\n    margin-top: var(--definition-list-vertical-spacing);\n    margin-bottom: var(--definition-list-vertical-spacing);\n\n    dt, .dt {\n\n        font-weight: var(--definition-list-term-weight);\n        margin-top: var(--definition-list-term-vertical-spacing);\n        margin-bottom: var(--definition-list-term-vertical-spacing); }\n\n    dd, .dd {\n\n        & + dt, & + .dt {\n\n            margin-top: var(--definition-list-item-spacing); } } }\n"]}